"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.detectBruteForceVulnerability = void 0;
function detectBruteForceVulnerability(ast) {
    const vulnerableEndpoints = [];
    function traverseAST(node) {
        const keys = Object.keys(node);
        if (keys.includes("body")) {
            console.log("node");
            const newNode = node === null || node === void 0 ? void 0 : node.body;
            if (typeof (Array.isArray(newNode))) {
                for (let index = 0; index < (newNode === null || newNode === void 0 ? void 0 : newNode.length); index++) {
                    traverseAST(newNode[index]);
                }
            }
            traverseAST(newNode);
        }
        else if (keys.includes("consequent")) {
            traverseAST(node.consequent);
        }
        else if (keys.includes("alternate")) {
            traverseAST(node.alternate);
        }
        else
            return;
    }
    traverseAST(ast);
    if (vulnerableEndpoints.length > 0) {
        console.log('==> Potential brute force attack vulnerability detected in the following endpoints:'.red);
        console.log(vulnerableEndpoints);
    }
    else {
        console.log('==> No potential brute force attack vulnerabilities detected.'.green);
    }
}
exports.detectBruteForceVulnerability = detectBruteForceVulnerability;
