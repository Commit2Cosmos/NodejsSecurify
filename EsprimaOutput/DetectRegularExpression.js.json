{
 "type": "Program",
 "body": [
  {
   "type": "ExpressionStatement",
   "expression": {
    "type": "Literal",
    "value": "use strict",
    "raw": "\"use strict\"",
    "loc": {
     "start": {
      "line": 1,
      "column": 0
     },
     "end": {
      "line": 1,
      "column": 12
     }
    }
   },
   "directive": "use strict",
   "loc": {
    "start": {
     "line": 1,
     "column": 0
    },
    "end": {
     "line": 1,
     "column": 13
    }
   }
  }
 ],
 "sourceType": "script",
 "loc": {
  "start": {
   "line": 1,
   "column": 0
  },
  "end": {
   "line": 1,
   "column": 13
  }
 },
 "comments": [
  {
   "type": "Line",
   "value": " import * as esprima from 'esprima';",
   "loc": {
    "start": {
     "line": 2,
     "column": 0
    },
    "end": {
     "line": 2,
     "column": 38
    }
   }
  },
  {
   "type": "Line",
   "value": " import * as jsonfile from 'jsonfile';",
   "loc": {
    "start": {
     "line": 3,
     "column": 0
    },
    "end": {
     "line": 3,
     "column": 40
    }
   }
  },
  {
   "type": "Line",
   "value": " // Function to detect ReDoS in a parsed JavaScript file",
   "loc": {
    "start": {
     "line": 4,
     "column": 0
    },
    "end": {
     "line": 4,
     "column": 58
    }
   }
  },
  {
   "type": "Line",
   "value": " function detectReDoS(parsedFile: esprima.Program) {",
   "loc": {
    "start": {
     "line": 5,
     "column": 0
    },
    "end": {
     "line": 5,
     "column": 54
    }
   }
  },
  {
   "type": "Line",
   "value": "     const regexNodes: esprima.Node[] = [];",
   "loc": {
    "start": {
     "line": 6,
     "column": 0
    },
    "end": {
     "line": 6,
     "column": 45
    }
   }
  },
  {
   "type": "Line",
   "value": "     // Traverse the parsed file to find regular expression nodes",
   "loc": {
    "start": {
     "line": 7,
     "column": 0
    },
    "end": {
     "line": 7,
     "column": 67
    }
   }
  },
  {
   "type": "Line",
   "value": "     function traverseNode(node: esprima.Node) {",
   "loc": {
    "start": {
     "line": 8,
     "column": 0
    },
    "end": {
     "line": 8,
     "column": 50
    }
   }
  },
  {
   "type": "Line",
   "value": "         if (node.type === 'Literal' && typeof node.value === 'string') {",
   "loc": {
    "start": {
     "line": 9,
     "column": 0
    },
    "end": {
     "line": 9,
     "column": 75
    }
   }
  },
  {
   "type": "Line",
   "value": "             try {",
   "loc": {
    "start": {
     "line": 10,
     "column": 0
    },
    "end": {
     "line": 10,
     "column": 20
    }
   }
  },
  {
   "type": "Line",
   "value": "                 new RegExp(node.value);",
   "loc": {
    "start": {
     "line": 11,
     "column": 0
    },
    "end": {
     "line": 11,
     "column": 42
    }
   }
  },
  {
   "type": "Line",
   "value": "             } catch (error) {",
   "loc": {
    "start": {
     "line": 12,
     "column": 0
    },
    "end": {
     "line": 12,
     "column": 32
    }
   }
  },
  {
   "type": "Line",
   "value": "                 regexNodes.push(node);",
   "loc": {
    "start": {
     "line": 13,
     "column": 0
    },
    "end": {
     "line": 13,
     "column": 41
    }
   }
  },
  {
   "type": "Line",
   "value": "             }",
   "loc": {
    "start": {
     "line": 14,
     "column": 0
    },
    "end": {
     "line": 14,
     "column": 16
    }
   }
  },
  {
   "type": "Line",
   "value": "         }",
   "loc": {
    "start": {
     "line": 15,
     "column": 0
    },
    "end": {
     "line": 15,
     "column": 12
    }
   }
  },
  {
   "type": "Line",
   "value": "         // Recursively traverse child nodes",
   "loc": {
    "start": {
     "line": 16,
     "column": 0
    },
    "end": {
     "line": 16,
     "column": 46
    }
   }
  },
  {
   "type": "Line",
   "value": "         for (const key in node) {",
   "loc": {
    "start": {
     "line": 17,
     "column": 0
    },
    "end": {
     "line": 17,
     "column": 36
    }
   }
  },
  {
   "type": "Line",
   "value": "             if (typeof node[key] === 'object' && node[key] !== null) {",
   "loc": {
    "start": {
     "line": 18,
     "column": 0
    },
    "end": {
     "line": 18,
     "column": 73
    }
   }
  },
  {
   "type": "Line",
   "value": "                 traverseNode(node[key]);",
   "loc": {
    "start": {
     "line": 19,
     "column": 0
    },
    "end": {
     "line": 19,
     "column": 43
    }
   }
  },
  {
   "type": "Line",
   "value": "             }",
   "loc": {
    "start": {
     "line": 20,
     "column": 0
    },
    "end": {
     "line": 20,
     "column": 16
    }
   }
  },
  {
   "type": "Line",
   "value": "         }",
   "loc": {
    "start": {
     "line": 21,
     "column": 0
    },
    "end": {
     "line": 21,
     "column": 12
    }
   }
  },
  {
   "type": "Line",
   "value": "     }",
   "loc": {
    "start": {
     "line": 22,
     "column": 0
    },
    "end": {
     "line": 22,
     "column": 8
    }
   }
  },
  {
   "type": "Line",
   "value": "     // Start traversing the parsed file",
   "loc": {
    "start": {
     "line": 23,
     "column": 0
    },
    "end": {
     "line": 23,
     "column": 42
    }
   }
  },
  {
   "type": "Line",
   "value": "     traverseNode(parsedFile);",
   "loc": {
    "start": {
     "line": 24,
     "column": 0
    },
    "end": {
     "line": 24,
     "column": 32
    }
   }
  },
  {
   "type": "Line",
   "value": "     // Print information about ReDoS instances",
   "loc": {
    "start": {
     "line": 25,
     "column": 0
    },
    "end": {
     "line": 25,
     "column": 49
    }
   }
  },
  {
   "type": "Line",
   "value": "     regexNodes.forEach((node, index) => {",
   "loc": {
    "start": {
     "line": 26,
     "column": 0
    },
    "end": {
     "line": 26,
     "column": 44
    }
   }
  },
  {
   "type": "Line",
   "value": "         const { line, column } = node.loc?.start || { line: undefined, column: undefined };",
   "loc": {
    "start": {
     "line": 27,
     "column": 0
    },
    "end": {
     "line": 27,
     "column": 94
    }
   }
  },
  {
   "type": "Line",
   "value": "         console.log(`ReDoS detected at line ${line}, column ${column}`);",
   "loc": {
    "start": {
     "line": 28,
     "column": 0
    },
    "end": {
     "line": 28,
     "column": 75
    }
   }
  },
  {
   "type": "Line",
   "value": "     });",
   "loc": {
    "start": {
     "line": 29,
     "column": 0
    },
    "end": {
     "line": 29,
     "column": 10
    }
   }
  },
  {
   "type": "Line",
   "value": " }",
   "loc": {
    "start": {
     "line": 30,
     "column": 0
    },
    "end": {
     "line": 30,
     "column": 4
    }
   }
  },
  {
   "type": "Line",
   "value": " // Read and parse the .json file containing the parsed JavaScript",
   "loc": {
    "start": {
     "line": 31,
     "column": 0
    },
    "end": {
     "line": 31,
     "column": 68
    }
   }
  },
  {
   "type": "Line",
   "value": " const filePath = 'parsedFile.json';",
   "loc": {
    "start": {
     "line": 32,
     "column": 0
    },
    "end": {
     "line": 32,
     "column": 38
    }
   }
  },
  {
   "type": "Line",
   "value": " jsonfile.readFile(filePath, (err, parsedFile) => {",
   "loc": {
    "start": {
     "line": 33,
     "column": 0
    },
    "end": {
     "line": 33,
     "column": 53
    }
   }
  },
  {
   "type": "Line",
   "value": "     if (err) {",
   "loc": {
    "start": {
     "line": 34,
     "column": 0
    },
    "end": {
     "line": 34,
     "column": 17
    }
   }
  },
  {
   "type": "Line",
   "value": "         console.error('Error reading parsed file:', err);",
   "loc": {
    "start": {
     "line": 35,
     "column": 0
    },
    "end": {
     "line": 35,
     "column": 60
    }
   }
  },
  {
   "type": "Line",
   "value": "         return;",
   "loc": {
    "start": {
     "line": 36,
     "column": 0
    },
    "end": {
     "line": 36,
     "column": 18
    }
   }
  },
  {
   "type": "Line",
   "value": "     }",
   "loc": {
    "start": {
     "line": 37,
     "column": 0
    },
    "end": {
     "line": 37,
     "column": 8
    }
   }
  },
  {
   "type": "Line",
   "value": "     detectReDoS(parsedFile);",
   "loc": {
    "start": {
     "line": 38,
     "column": 0
    },
    "end": {
     "line": 38,
     "column": 31
    }
   }
  },
  {
   "type": "Line",
   "value": " });",
   "loc": {
    "start": {
     "line": 39,
     "column": 0
    },
    "end": {
     "line": 39,
     "column": 6
    }
   }
  }
 ],
 "tokens": [
  {
   "type": "String",
   "value": "\"use strict\"",
   "loc": {
    "start": {
     "line": 1,
     "column": 0
    },
    "end": {
     "line": 1,
     "column": 12
    }
   }
  },
  {
   "type": "Punctuator",
   "value": ";",
   "loc": {
    "start": {
     "line": 1,
     "column": 12
    },
    "end": {
     "line": 1,
     "column": 13
    }
   }
  }
 ],
 "errors": []
}