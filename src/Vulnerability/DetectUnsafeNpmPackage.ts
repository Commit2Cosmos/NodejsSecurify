import { exec } from 'child_process';
import * as fs from 'fs';
import * as util from 'util';

export function checkVulnerablePackages() {
  const auditCommand = 'npm audit --json';
  
  exec(auditCommand, (error, stdout, stderr) => {
    const logFile = fs.createWriteStream('consoleOutput.log', { flags: 'a' });
    const logStdout = process.stdout;

    console.log = function () {
        logFile.write(util.format.apply(null, Array.from(arguments)) + '\n');
        logStdout.write(util.format.apply(null, Array.from(arguments)) + '\n');
    };

    console.error = function () {
        logFile.write(util.format.apply(null, Array.from(arguments)) + '\n');
        logStdout.write(util.format.apply(null, Array.from(arguments)) + '\n');
    };
    
    if (error) {
      console.error(`Error executing npm audit: ${error.message}`);
      return;
    }

    const auditReport = JSON.parse(stdout);
    const vulnerablePackages = auditReport.vulnerabilities;

    if (vulnerablePackages && Object.keys(vulnerablePackages).length > 0) {
      console.log('Vulnerable packages found:'.red);
      for (const packageName in vulnerablePackages) {
        console.log(`Package: ${packageName}`);
        console.log(`Severity: ${vulnerablePackages[packageName].severity}`);
        console.log(`Vulnerable Versions: ${vulnerablePackages[packageName].via}`);
        console.log('---');
      }
    } else {
      console.log('No vulnerable packages found.'.green);
    }
    logFile.end();
  });
}