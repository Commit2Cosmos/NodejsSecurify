code,label
"const authLimiter = rateLimit({\n            windowMs: 15 * 60 * 1000, // 15 minutes\n            max: 5, // Limit each IP to 5 requests per windowMs\n            message: 'Too many login attempts from this IP, please try again later.'\n          });",0
"const loginLimiter = rateLimit({\n            store: new MongoStore({\n              uri: 'mongodb://localhost:27017/ratelimits',\n              expireTimeMs: 60 * 1000, // 1 minute\n            }),\n            max: 5,\n            message: 'Too many login attempts from this IP, please try again later.'\n          });",0
"const clientIp = req.ip;\n\n        if (loginAttempts[clientIp] >= MAX_LOGIN_ATTEMPTS) {\n          return res.status(429).send('Too many login attempts. Try again later.');\n        }",1
"const MAX_LOGIN_ATTEMPTS = 5;\n        const WINDOW_DURATION = 60000; // 1 minute\n        const loginAttempts = {};",1
"const loginLimiter = rateLimit({\n            store: new RedisStore({\n              expiry: 60, // 1 minute\n              client: require('redis').createClient(),\n            }),\n            max: 5,\n            message: 'Too many login attempts from this IP, please try again later.'\n          });",0
"const MAX_LOGIN_ATTEMPTS = 5;\n        const WINDOW_DURATION = 30000; // 30 seconds\n        const loginAttempts = {};\n        \n          if (!loginAttempts[username]) {\n            loginAttempts[username] = [];\n          }\n        \n          // Remove login attempts older than the window duration\n          loginAttempts[username] = loginAttempts[username].filter(attemptTime => now - attemptTime <= WINDOW_DURATION);\n        \n          if (loginAttempts[username].length >= MAX_LOGIN_ATTEMPTS) {\n            return res.status(429).send('Too many login attempts. Try again later.');\n          }",0
"const MAX_LOGIN_ATTEMPTS = 5;\n        const LOGIN_TIMEOUT = 30000; // 30 seconds\n        const loginAttempts = {};\n        \n        app.post('/login', (req, res) => {\n          const { username, password } = req.body;\n        \n          if (loginAttempts[username] >= MAX_LOGIN_ATTEMPTS) {\n            return res.status(429).send('Too many login attempts. Try again later.');\n          }\n        \n          const isAuthenticated = authenticateUser(username, password);\n        \n          if (isAuthenticated) {\n            // Successful login\n            // ...\n            loginAttempts[username] = 0; // Reset login attempts\n            res.send('Login successful');\n          } else {\n            loginAttempts[username]++; // Increment login attempts\n        \n            // Reset login attempts after a timeout\n            setTimeout(() => {\n              loginAttempts[username] = 0;\n            }, LOGIN_TIMEOUT);\n        \n            res.status(401).send('Invalid credentials');\n          }\n        });\n        ",1
"\n        const MAX_LOGIN_ATTEMPTS = 5;\n        const COOLING_OFF_PERIOD = 15 * 60 * 1000; // 15 minutes in milliseconds\n        const loginAttempts = {};\n        \n        app.use(express.json());\n        \n        app.post('/login', (req, res) => {\n          const { username, password } = req.body;\n        \n          if (loginAttempts[username] && loginAttempts[username].count >= MAX_LOGIN_ATTEMPTS) {\n            return res.status(429).send('Too many login attempts. Try again later.');\n          }\n        \n          const isAuthenticated = authenticateUser(username, password);\n        \n          if (isAuthenticated) {\n            // Successful login\n            resetLoginAttempts(username);\n            res.send('Login successful');\n          } else {\n            incrementLoginAttempts(username);\n            res.status(401).send('Invalid credentials');\n          }\n        });\n        \n        function resetLoginAttempts(username) {\n          loginAttempts[username] = { count: 0, lastAttempt: Date.now() };\n        }\n        \n        function incrementLoginAttempts(username) {\n          if (!loginAttempts[username]) {\n            loginAttempts[username] = { count: 1, lastAttempt: Date.now() };\n          } else {\n            loginAttempts[username].count++;\n            loginAttempts[username].lastAttempt = Date.now();\n          }\n        }\n        \n        // Periodically reset login attempts to prevent unlimited growth\n        setInterval(() => {\n          Object.keys(loginAttempts).forEach((username) => {\n            if (Date.now() - loginAttempts[username].lastAttempt > COOLING_OFF_PERIOD) {\n              resetLoginAttempts(username);\n            }\n          });\n        }, 60000); // Check every minute\n        \n        // Simulated authentication function (replace with your actual authentication logic)\n        function authenticateUser(username, password) {\n          // Simulated authentication - always return true for this example\n          return true;\n        }\n        ",0
"const MAX_LOGIN_ATTEMPTS = 5;\n        const loginAttempts = {};\n        \n        app.post('/login', (req, res) => {\n          const { username, password } = req.body;\n        \n          if (loginAttempts[username] >= MAX_LOGIN_ATTEMPTS) {\n            return res.status(429).send('Too many login attempts. Try again later.');\n          }\n        \n          const isAuthenticated = authenticateUser(username, password);\n        \n          if (isAuthenticated) {\n            // Successful login\n            // ...\n            loginAttempts[username] = 0; // Reset login attempts\n            res.send('Login successful');\n          } else {\n            loginAttempts[username]++; // Increment login attempts\n            res.status(401).send('Invalid credentials');\n          }\n        });",1
"const express = require('express');\n        const rateLimit = require('express-rate-limit');\n        \n        const app = express();",0
"function add(a, b) { return a + b; }",0
"app.get('/search', (req, res) => {\n          const searchQuery = req.query.query;\n          const sqlQuery = ""SELECT * FROM products WHERE name LIKE %{searchQuery}"";\n          db.query(sqlQuery, (err, result) => {\n            if (err) {\n              res.status(500).send('Error executing the query');\n            } else {\n              res.json(result);\n            }\n          });\n        });\n        ",1
"app.get('/search', (req, res) => {\n          const searchTerm = req.query.term;\n          res.send('<p>You searched for: ' + searchTerm + '</p>');\n        });\n        ",1
"app.get('/user/:id', (req, res) => {\n          const userId = req.params.id;\n          const user = db.users[userId]; // Assuming db.users is an array\n          res.json(user);\n        });\n        ",1
"app.get('/ping', (req, res) => {\n          const host = req.query.host;\n          const pingResult = executeCommand('ping ' + host); // executeCommand function executes the OS command\n          res.send('Ping Result: ' + pingResult);\n        });\n        ",1
"app.post('/login', (req, res) => {\n          const { username, password } = req.body;\n          if (username === 'admin' && password === 'admin123') {\n            res.send('Login successful! Welcome, admin.');\n          } else {\n            res.send('Invalid credentials.');\n          }\n        });\n        ",1
"app.post('/upload', upload.single('file'), (req, res) => {\n          const filePath = '/uploads/' + req.file.filename;\n          res.send('File uploaded successfully to: ' + filePath);\n        });\n        ",1
"const speakeasy = require('speakeasy');\n        app.post('/verify-2fa', (req, res) => {\n          const { username, token } = req.body;\n          // Fetch 'secret' for the user from the database.\n          const isValid = speakeasy.totp.verify({ secret: 'user_secret', encoding: 'base32', token });\n          if (isValid) {\n            // Successful 2FA verification.\n            res.send('2FA verification successful!');\n          } else {\n            res.status(401).send('Invalid 2FA token.');\n          }\n        });\n        ",0
"const rateLimit = require('express-rate-limit');\n        const limiter = rateLimit({\n          windowMs: 15 * 60 * 1000, // 15 minutes\n          max: 100, // Limit each IP to 100 requests per windowMs\n        });\n        app.use('/api/', limiter);\n        ",0
" const loginLimiter = rateLimit({\n            windowMs: 10000, // 10 seconds\n            max: 1000, // Limit each IP to 1000 requests per 10 seconds (very permissive)\n            message: 'Too many requests from this IP, please try again later.'\n          });",1
"const loginLimiter = rateLimit({\n            windowMs: 60 * 60 * 1000, // 1 hour\n            max: 5, // Limit each IP to 5 requests per hour\n            message: 'Too many login attempts from this IP, please try again later.'\n          });",0
"const loginLimiter = rateLimit({\n            windowMs: 60 * 60 * 1000, // 1 hour\n            max: 5, // Limit each IP to 5 requests per hour\n            message: 'Too many login attempts from this IP, please try again later.'\n          });",1
"const multer = require('multer');\n        const storage = multer.diskStorage({\n          destination: function (req, file, cb) {\n            // Define the destination folder securely.\n            cb(null, '/secure_upload_path');\n          },\n          filename: function (req, file, cb) {\n            // Generate a unique filename securely.\n            cb(null, generateUniqueFileName(file.originalname));\n          }\n        });\n        const upload = multer({ storage });\n        app.post('/upload', upload.single('file'), (req, res) => {\n          res.send('File uploaded successfully.');\n        });\n        ",0
"const helmet = require('helmet');\n        app.use(helmet());\n        ",0
"const helmet = require('helmet');\n        app.use(helmet.contentSecurityPolicy({\n          directives: {\n            defaultSrc: [""'self'""],\n            scriptSrc: [""'self'""],\n            styleSrc: [""'self'""],\n            imgSrc: [""'self'""],\n            objectSrc: [""'none'""]\n          }\n        }));\n        ",0
"const csrf = require('csurf');\n        app.use(csrf({ cookie: true }));\n        ",0
"app.get('/logout', (req, res) => {\n            // Clear session or JWT token on the server-side.\n            res.send('Logout successful.');\n          });\n          ",0
"const sanitize = require('mongo-sanitize');\n        app.get('/users/:username', (req, res) => {\n          const username = sanitize(req.params.username);\n          // Fetch user data from the database using sanitized 'username'.\n        });\n        ",0
"const crypto = require('crypto');\n        const secureRandomNumber = crypto.randomBytes(16).toString('hex');\n        ",0
"const bcrypt = require('bcrypt');\n        app.post('/register', async (req, res) => {\n          const { username, password } = req.body;\n          const saltRounds = 10;\n          const hashedPassword = await bcrypt.hash(password, saltRounds);\n          // Save 'username' and 'hashedPassword' to the database.\n          res.send('User registered successfully!');\n        });\n        ",0
"const crypto = require('crypto');\n        const ssn = '123-45-6789';\n        const hashedSSN = crypto.createHash('sha256').update(ssn).digest('hex');\n        ",0
"app.use((req, res, next) => {\n            res.setHeader('Content-Security-Policy', ""default-src 'self'"");\n            next();\n          });\n          ",0
"const cors = require('cors');\n        app.use(cors({\n          origin: 'https://your-allowed-origin.com',\n          methods: ['GET', 'POST'],\n          allowedHeaders: ['Content-Type', 'Authorization']\n        }));\n        ",0
"const { v4: uuidv4 } = require('uuid');\n        const uniqueId = uuidv4();",0
"function login(username, password) {if (login.attempts === undefined) {\n  login.attempts = 1;\n} else if (login.attempts >= 3) {\n  login.attempts = 1;\n  return ""Rate limited"";\n} else {\n  login.attempts++;\n}\n\nreturn ""Invalid password"";\n}",0
"function authenticate(user, password) {\n  if (authenticate.failedAttempts === undefined) {\n    authenticate.failedAttempts = 0;\n  }\n\n  if (authenticate.failedAttempts >= 5) {\n    return ""Rate limit exceeded. Try again later."";\n  }\n\n  if (user === ""admin"" && password === ""admin123"") {\n    authenticate.failedAttempts = 0;\n    return ""Authentication successful."";\n  } else {\n    authenticate.failedAttempts++;\n    return ""Invalid credentials."";\n  }\n}",0
"function processRequest(data) {\n  if (processRequest.rateLimit === undefined) {\n    processRequest.rateLimit = 1;\n  } else if (processRequest.rateLimit >= 10) {\n    return ""Rate limit exceeded. Please try again later."";\n  } else {\n    processRequest.rateLimit++;\n  }\n\n  // Process the data here\n  return ""Request processed successfully."";\n}",0
"function getAccessToken(clientId, clientSecret) {\n  if (!getAccessToken.tokenRequests) {\n    getAccessToken.tokenRequests = {};\n  }\n\n  const clientIdSecret = `${clientId}:${clientSecret}`;\n  if (!getAccessToken.tokenRequests[clientIdSecret]) {\n    getAccessToken.tokenRequests[clientIdSecret] = 1;\n  } else if (getAccessToken.tokenRequests[clientIdSecret] >= 5) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    getAccessToken.tokenRequests[clientIdSecret]++;\n  }\n\n  // Fetch and return the access token\n  return ""Bearer xyz123456"";\n}",0
"function processOrder(orderData) {\n  if (processOrder.rateLimit === undefined) {\n    processOrder.rateLimit = 1;\n  } else if (processOrder.rateLimit >= 20) {\n    return ""Rate limit reached. Please wait and try again."";\n  } else {\n    processOrder.rateLimit++;\n  }\n\n  // Process the order data here\n  return ""Order processed successfully."";\n}",0
"function sendNotification(message) {\n  if (sendNotification.rateLimit === undefined) {\n    sendNotification.rateLimit = 1;\n  } else if (sendNotification.rateLimit >= 50) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    sendNotification.rateLimit++;\n  }\n\n  // Send the notification here\n  return ""Notification sent successfully."";\n}",0
"function addToCart(item) {\n  if (!addToCart.cart) {\n    addToCart.cart = [];\n  }\n\n  if (addToCart.cart.length >= 10) {\n    return ""Cart is full. Cannot add more items."";\n  }\n\n  addToCart.cart.push(item);\n  return ""Item added to cart successfully."";\n}",0
"function createSession(sessionData) {\n  if (createSession.sessions === undefined) {\n    createSession.sessions = 1;\n  } else if (createSession.sessions >= 100) {\n    return ""Rate limit exceeded. Please try again later."";\n  } else {\n    createSession.sessions++;\n  }\n\n  // Create the session here\n  return ""Session created successfully."";\n}",0
"function submitForm(formData) {\n  if (submitForm.submissions === undefined) {\n    submitForm.submissions = 1;\n  } else if (submitForm.submissions >= 5) {\n    return ""Rate limit exceeded. Please try again later."";\n  } else {\n    submitForm.submissions++;\n  }\n\n  // Process the form data here\n  return ""Form submitted successfully."";\n}",0
"function performAction(actionData) {\n  if (performAction.rateLimit === undefined) {\n    performAction.rateLimit = 1;\n  } else if (performAction.rateLimit >= 100) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    performAction.rateLimit++;\n  }\n\n  // Perform the action here\n  return ""Action performed successfully."";\n}",0
"function updateProfile(profileData) {\n  if (updateProfile.rateLimit === undefined) {\n    updateProfile.rateLimit = 1;\n  } else if (updateProfile.rateLimit >= 3) {\n    return ""Rate limit exceeded. Please try again later."";\n  } else {\n    updateProfile.rateLimit++;\n  }\n\n  // Update the user profile here\n  return ""Profile updated successfully."";\n}",0
"function requestResource(resourceId) {\n  if (!requestResource.requestCount) {\n    requestResource.requestCount = {};\n  }\n\n  if (!requestResource.requestCount[resourceId]) {\n    requestResource.requestCount[resourceId] = 1;\n  } else if (requestResource.requestCount[resourceId] >= 50) {\n    return ""Rate limit reached for this resource. Please try again later."";\n  } else {\n    requestResource.requestCount[resourceId]++;\n  }\n\n  // Fetch and return the requested resource\n  return ""Resource data for "" + resourceId;\n}",0
"function sendEmail(emailData) {\n  if (sendEmail.rateLimit === undefined) {\n    sendEmail.rateLimit = 1;\n  } else if (sendEmail.rateLimit >= 20) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    sendEmail.rateLimit++;\n  }\n\n  // Send the email here\n  return ""Email sent successfully."";\n}",0
"function requestToken(tokenData) {\n  if (!requestToken.tokens) {\n    requestToken.tokens = [];\n  }\n\n  if (requestToken.tokens.length >= 5) {\n    return ""Rate limit exceeded. Cannot request more tokens."";\n  }\n\n  requestToken.tokens.push(tokenData);\n  return ""Token requested successfully."";\n}",0
"function fetchResource(resourceId) {\n  if (!fetchResource.rateLimit) {\n    fetchResource.rateLimit = {};\n  }\n\n  if (!fetchResource.rateLimit[resourceId]) {\n    fetchResource.rateLimit[resourceId] = 1;\n  } else if (fetchResource.rateLimit[resourceId] >= 10) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    fetchResource.rateLimit[resourceId]++;\n  }\n\n  // Fetch and return the resource data\n  return ""Data for "" + resourceId;\n}",0
"function requestImage(imageId) {\n  if (!requestImage.rateLimit) {\n    requestImage.rateLimit = {};\n  }\n\n  if (!requestImage.rateLimit[imageId]) {\n    requestImage.rateLimit[imageId] = 1;\n  } else if (requestImage.rateLimit[imageId] >= 100) {\n    return ""Rate limit reached for this image. Please try again later."";\n  } else {\n    requestImage.rateLimit[imageId]++;\n  }\n\n  // Fetch and return the requested image\n  return ""Image data for "" + imageId;\n}",0
"function createAccount(userData) {\n  if (createAccount.rateLimit === undefined) {\n    createAccount.rateLimit = 1;\n  } else if (createAccount.rateLimit >= 2) {\n    return ""Rate limit exceeded. Please try again later."";\n  } else {\n    createAccount.rateLimit++;\n  }\n\n  // Create the user account here\n  return ""Account created successfully."";\n}",0
"function requestDocument(documentId) {\n  if (!requestDocument.requestCount) {\n    requestDocument.requestCount = {};\n  }\n\n  if (!requestDocument.requestCount[documentId]) {\n    requestDocument.requestCount[documentId] = 1;\n  } else if (requestDocument.requestCount[documentId] >= 50) {\n    return ""Rate limit reached for this document. Please try again later."";\n  } else {\n    requestDocument.requestCount[documentId]++;\n  }\n\n  // Fetch and return the requested document\n  return ""Document content for "" + documentId;\n}",0
"function updateSettings(settingsData) {\n  if (updateSettings.rateLimit === undefined) {\n    updateSettings.rateLimit = 1;\n  } else if (updateSettings.rateLimit >= 10) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    updateSettings.rateLimit++;\n  }\n\n  // Update the settings data here\n  return ""Settings updated successfully."";\n}",0
"function requestAPI(apiEndpoint, requestData) {\n  if (!requestAPI.rateLimit) {\n    requestAPI.rateLimit = {};\n  }\n\n  if (!requestAPI.rateLimit[apiEndpoint]) {\n    requestAPI.rateLimit[apiEndpoint] = 1;\n  } else if (requestAPI.rateLimit[apiEndpoint] >= 100) {\n    return ""Rate limit exceeded for this API endpoint. Please try again later."";\n  } else {\n    requestAPI.rateLimit[apiEndpoint]++;\n  }\n\n  // Make the API request and return the response\n  return ""Response from API "" + apiEndpoint;\n}",0
"function requestResource(resourceId) {\n  if (!requestResource.rateLimit) {\n    requestResource.rateLimit = {};\n  }\n\n  if (!requestResource.rateLimit[resourceId]) {\n    requestResource.rateLimit[resourceId] = 1;\n  } else if (requestResource.rateLimit[resourceId] >= 50) {\n    return ""Rate limit exceeded for this resource. Please try again later."";\n  } else {\n    requestResource.rateLimit[resourceId]++;\n  }\n\n  // Fetch and return the resource data\n  return ""Resource data for "" + resourceId;\n}",0
"function sendSMS(phoneNumber, message) {\n  if (sendSMS.rateLimit === undefined) {\n    sendSMS.rateLimit = 1;\n  } else if (sendSMS.rateLimit >= 50) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    sendSMS.rateLimit++;\n  }\n\n  // Send the SMS message here\n  return ""SMS sent to "" + phoneNumber;\n}",0
"function fetchUserData(userId) {\n  if (fetchUserData.rateLimit === undefined) {\n    fetchUserData.rateLimit = 1;\n  } else if (fetchUserData.rateLimit >= 5) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    fetchUserData.rateLimit++;\n  }\n\n  // Fetch and return the user data\n  return ""User data for "" + userId;\n}",0
"function uploadFile(fileData) {\n  if (uploadFile.rateLimit === undefined) {\n    uploadFile.rateLimit = 1;\n  } else if (uploadFile.rateLimit >= 2) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    uploadFile.rateLimit++;\n  }\n\n  // Upload the file here\n  return ""File uploaded successfully."";\n}",0
"function postComment(commentData) {\n  if (postComment.rateLimit === undefined) {\n    postComment.rateLimit = 1;\n  } else if (postComment.rateLimit >= 20) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    postComment.rateLimit++;\n  }\n\n  // Post the comment here\n  return ""Comment posted successfully."";\n}",0
"function createEvent(eventData) {\n  if (createEvent.rateLimit === undefined) {\n    createEvent.rateLimit = 1;\n  } else if (createEvent.rateLimit >= 10) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    createEvent.rateLimit++;\n  }\n\n  // Create the event here\n  return ""Event created successfully."";\n}",0
"function addFriend(userId) {\n  if (addFriend.rateLimit === undefined) {\n    addFriend.rateLimit = 1;\n  } else if (addFriend.rateLimit >= 50) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    addFriend.rateLimit++;\n  }\n\n  // Add the friend here\n  return ""Friend added successfully."";\n}",0
"function requestResource(resourceId) {\n  if (!requestResource.rateLimit) {\n    requestResource.rateLimit = {};\n  }\n\n  if (!requestResource.rateLimit[resourceId]) {\n    requestResource.rateLimit[resourceId] = 1;\n  } else if (requestResource.rateLimit[resourceId] >= 100) {\n    return ""Rate limit exceeded for this resource. Please try again later."";\n  } else {\n    requestResource.rateLimit[resourceId]++;\n  }\n\n  // Fetch and return the resource data\n  return ""Resource data for "" + resourceId;\n}",0
"function createPost(postData) {\n  if (createPost.rateLimit === undefined) {\n    createPost.rateLimit = 1;\n  } else if (createPost.rateLimit >= 20) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    createPost.rateLimit++;\n  }\n\n  // Create the post here\n  return ""Post created successfully."";\n}",0
"function submitFeedback(feedbackData) {\n  if (submitFeedback.rateLimit === undefined) {\n    submitFeedback.rateLimit = 1;\n  } else if (submitFeedback.rateLimit >= 50) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    submitFeedback.rateLimit++;\n  }\n\n  // Submit the feedback here\n  return ""Feedback submitted successfully."";\n}",0
"function requestResource(resourceId) {\n  if (!requestResource.rateLimit) {\n    requestResource.rateLimit = {};\n  }\n\n  if (!requestResource.rateLimit[resourceId]) {\n    requestResource.rateLimit[resourceId] = 1;\n  } else if (requestResource.rateLimit[resourceId] >= 100) {\n    return ""Rate limit exceeded for this resource. Please try again later."";\n  } else {\n    requestResource.rateLimit[resourceId]++;\n  }\n\n  // Fetch and return the resource data\n  return ""Resource data for "" + resourceId;\n}",0
"function updateProfile(profileData) {\n  if (updateProfile.rateLimit === undefined) {\n    updateProfile.rateLimit = 1;\n  } else if (updateProfile.rateLimit >= 3) {\n    return ""Rate limit exceeded. Please try again later."";\n  } else {\n    updateProfile.rateLimit++;\n  }\n\n  // Update the user profile here\n  return ""Profile updated successfully."";\n}",0
"function requestResource(resourceId) {\n  if (!requestResource.rateLimit) {\n    requestResource.rateLimit = {};\n  }\n\n  if (!requestResource.rateLimit[resourceId]) {\n    requestResource.rateLimit[resourceId] = 1;\n  } else if (requestResource.rateLimit[resourceId] >= 100) {\n    return ""Rate limit exceeded for this resource. Please try again later."";\n  } else {\n    requestResource.rateLimit[resourceId]++;\n  }\n\n  // Fetch and return the resource data\n  return ""Resource data for "" + resourceId;\n}",0
"function sendRequest(requestData) {\n  if (sendRequest.rateLimit === undefined) {\n    sendRequest.rateLimit = 1;\n  } else if (sendRequest.rateLimit >= 50) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    sendRequest.rateLimit++;\n  }\n\n  // Send the request here\n  return ""Request sent successfully."";\n}",0
"function submitForm(formData) {\n  if (submitForm.rateLimit === undefined) {\n    submitForm.rateLimit = 1;\n  } else if (submitForm.rateLimit >= 5) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    submitForm.rateLimit++;\n  }\n\n  // Process the form data here\n  return ""Form submitted successfully."";\n}",0
"function createPost(postData) {\n  if (createPost.rateLimit === undefined) {\n    createPost.rateLimit = 1;\n  } else if (createPost.rateLimit >= 20) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    createPost.rateLimit++;\n  }\n\n  // Create the post here\n  return ""Post created successfully."";\n}",0
"function addComment(commentData) {\n  if (addComment.rateLimit === undefined) {\n    addComment.rateLimit = 1;\n  } else if (addComment.rateLimit >= 30) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    addComment.rateLimit++;\n  }\n\n  // Add the comment here\n  return ""Comment added successfully."";\n}",0
"function requestResource(resourceId) {\n  if (!requestResource.rateLimit) {\n    requestResource.rateLimit = {};\n  }\n\n  if (!requestResource.rateLimit[resourceId]) {\n    requestResource.rateLimit[resourceId] = 1;\n  } else if (requestResource.rateLimit[resourceId] >= 100) {\n    return ""Rate limit exceeded for this resource. Please try again later."";\n  } else {\n    requestResource.rateLimit[resourceId]++;\n  }\n\n  // Fetch and return the resource data\n  return ""Resource data for "" + resourceId;\n}",0
"function requestResource(resourceId) {\n  if (!requestResource.rateLimit) {\n    requestResource.rateLimit = {};\n  }\n\n  if (!requestResource.rateLimit[resourceId]) {\n    requestResource.rateLimit[resourceId] = 1;\n  } else if (requestResource.rateLimit[resourceId] >= 100) {\n    return ""Rate limit exceeded for this resource. Please try again later."";\n  } else {\n    requestResource.rateLimit[resourceId]++;\n  }\n\n  // Fetch and return the resource data\n  return ""Resource data for "" + resourceId;\n}",0
"function sendRequest(requestData) {\n  if (sendRequest.rateLimit === undefined) {\n    sendRequest.rateLimit = 1;\n  } else if (sendRequest.rateLimit >= 50) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    sendRequest.rateLimit++;\n  }\n\n  // Send the request here\n  return ""Request sent successfully."";\n}",0
"function submitForm(formData) {\n  if (submitForm.rateLimit === undefined) {\n    submitForm.rateLimit = 1;\n  } else if (submitForm.rateLimit >= 5) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    submitForm.rateLimit++;\n  }\n\n  // Process the form data here\n  return ""Form submitted successfully."";\n}",0
"function createPost(postData) {\n  if (createPost.rateLimit === undefined) {\n    createPost.rateLimit = 1;\n  } else if (createPost.rateLimit >= 20) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    createPost.rateLimit++;\n  }\n\n  // Create the post here\n  return ""Post created successfully."";\n}",0
"function addComment(commentData) {\n  if (addComment.rateLimit === undefined) {\n    addComment.rateLimit = 1;\n  } else if (addComment.rateLimit >= 30) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    addComment.rateLimit++;\n  }\n\n  // Add the comment here\n  return ""Comment added successfully."";\n}",0
"function requestResource(resourceId) {\n  if (!requestResource.rateLimit) {\n    requestResource.rateLimit = {};\n  }\n\n  if (!requestResource.rateLimit[resourceId]) {\n    requestResource.rateLimit[resourceId] = 1;\n  } else if (requestResource.rateLimit[resourceId] >= 100) {\n    return ""Rate limit exceeded for this resource. Please try again later."";\n  } else {\n    requestResource.rateLimit[resourceId]++;\n  }\n\n  // Fetch and return the resource data\n  return ""Resource data for "" + resourceId;\n}",0
"function sendRequest(requestData) {\n  if (sendRequest.rateLimit === undefined) {\n    sendRequest.rateLimit = 1;\n  } else if (sendRequest.rateLimit >= 50) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    sendRequest.rateLimit++;\n  }\n\n  // Send the request here\n  return ""Request sent successfully."";\n}",0
"function submitForm(formData) {\n  if (submitForm.rateLimit === undefined) {\n    submitForm.rateLimit = 1;\n  } else if (submitForm.rateLimit >= 5) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    submitForm.rateLimit++;\n  }\n\n  // Process the form data here\n  return ""Form submitted successfully."";\n}",0
"function createPost(postData) {\n  if (createPost.rateLimit === undefined) {\n    createPost.rateLimit = 1;\n  } else if (createPost.rateLimit >= 20) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    createPost.rateLimit++;\n  }\n\n  // Create the post here\n  return ""Post created successfully."";\n}",0
"function addComment(commentData) {\n  if (addComment.rateLimit === undefined) {\n    addComment.rateLimit = 1;\n  } else if (addComment.rateLimit >= 30) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    addComment.rateLimit++;\n  }\n\n  // Add the comment here\n  return ""Comment added successfully."";\n}",0
"function sendRequest(requestData) {\n  if (sendRequest.rateLimit === undefined) {\n    sendRequest.rateLimit = 1;\n  } else if (sendRequest.rateLimit >= 50) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    sendRequest.rateLimit++;\n  }\n\n  // Send the request here\n  return ""Request sent successfully."";\n}",0
"function submitForm(formData) {\n  if (submitForm.rateLimit === undefined) {\n    submitForm.rateLimit = 1;\n  } else if (submitForm.rateLimit >= 5) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    submitForm.rateLimit++;\n  }\n\n  // Process the form data here\n  return ""Form submitted successfully."";\n}",0
"function createPost(postData) {\n  if (createPost.rateLimit === undefined) {\n    createPost.rateLimit = 1;\n  } else if (createPost.rateLimit >= 20) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    createPost.rateLimit++;\n  }\n\n  // Create the post here\n  return ""Post created successfully."";\n}",0
"function addComment(commentData) {\n  if (addComment.rateLimit === undefined) {\n    addComment.rateLimit = 1;\n  } else if (addComment.rateLimit >= 30) {\n    return ""Rate limit exceeded. Try again later."";\n  } else {\n    addComment.rateLimit++;\n  }\n\n  // Add the comment here\n  return ""Comment added successfully."";\n}",0
"var username = ""admin""; var password = ""admin123"";",1
"function login(username, password) { if (password === ""password"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""1q2w3e4r"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""admin"" && password === ""pa$$w0rd"") { return true; } else { return false; } }",1
"function login(username, password) { if (isValidUser(username) && isValidPassword(password)) { return true; } else { return false; } }",0
"const users = [""user1"", ""user2"", ""user3""]; function login(username, password) { if (users.includes(username) && password === ""password"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""admin123"" || password === ""password"" || password === ""qwerty"") { return true; } else { return false; } }",1
"function login(username, password) { if (isValidCredentials(username, password)) { return true; } else { return false; } }",0
"function login(username, password) { if (username === ""admin"" && password === ""admin@123"") { return true; } else { return false; } }",0
"function add(a, b) { return a + b; }",0
"var username = ""admin""; var password = ""admin123"";",1
"function login(username, password) { if (password === ""password"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""1q2w3e4r"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""admin"" && password === ""pa$$w0rd"") { return true; } else { return false; } }",1
"function login(username, password) {if (login.attempts === undefined) {\n              login.attempts = 1;\n            } else if (login.attempts >= 3) {\n              login.attempts = 1;\n              return ""Rate limited"";\n            } else {\n              login.attempts++;\n            }\n            \n            return ""Invalid password"";\n          }",0
"function login(username, password) { if (isValidUser(username) && isValidPassword(password)) { return true; } else { return false; } }",0
"const users = [""user1"", ""user2"", ""user3""]; function login(username, password) { if (users.includes(username) && password === ""password"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""admin123"" || password === ""password"" || password === ""qwerty"") { return true; } else { return false; } }",1
"function login(username, password) { if (isValidCredentials(username, password)) { return true; } else { return false; } }",0
"function login(username, password) { if (username === ""admin"" && password === ""admin@123"") { return true; } else { return false; } }",0
"function login(username, password) { if (password === ""123456"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""john"" && password === ""john123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""letmein"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qwerty123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abcdef"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""password123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""default"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""admin"" && password === ""admin12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""admin@321"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abcdefg"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""root"" && password === ""root123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""admin@1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""test"" && password === ""test123"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""user"" && password === ""userpass"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""secure"" && password === ""secure@123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""password1"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""user"" && password === ""password"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""admin@12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""webadmin"" && password === ""webadmin123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""test123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""12345678"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""user123"" && password === ""user123pass"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""iloveyou"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abcdef123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qwertyuiop"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""superuser"" && password === ""superpass123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abcdef@123"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""testuser"" && password === ""testuserpass"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""111111"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""john_doe"" && password === ""john_doe@123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qwertyuiop123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abcdef!@#"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""password@123"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""user123"" && password === ""user123@pass"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""1234abcd"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""987654321"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""user123"" && password === ""user1234@pass"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""password@1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""admin"" && password === ""admin123456"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""admin@!@#123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abcd1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""user"" && password === ""pass12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""asdfghjkl"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""12345abcd"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""pass@word123"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""user"" && password === ""user123456"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""password@!@#123"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jsmith"" && password === ""johnsmith"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""1234567890"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""q1w2e3r4t5y6u7"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""1qaz2wsx3edc"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jsmith"" && password === ""johnsmith123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qwerty12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""iloveyou123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""123456789"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""testuser123"" && password === ""testuser123pass"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""testtest"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jsmith"" && password === ""smith123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qwert12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""testuser1"" && password === ""testuser1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abcdefg123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""pass12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""testuser123"" && password === ""testuserpass123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""testtest123"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jsmith"" && password === ""smith1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qwert123456"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""testuser1"" && password === ""testuser12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abcdefg1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""pass123456"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""testuser123"" && password === ""testuserpass1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""testtest1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jsmith"" && password === ""smith12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qwert1234567"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""testuser1"" && password === ""testuser123456"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abcdefg12345"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""pass1234567"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""testuser123"" && password === ""testuserpass12345"") { return true; } else { return false; } }",1
"function add(a, b) { return a + b; }",0
"var a = 5; var b = 10; var sum = a + b;",0
"function greet(name) { return ""Hello, "" + name + ""!""; }",0
"var x = 3; var y = 7; var result = x * y;",0
"function multiply(a, b) { return a * b; }",0
"var pi = 3.14159; var radius = 5; var area = pi * radius * radius;",0
"function divide(a, b) { return a / b; }",0
"var side = 4; var area = side * side;",0
"function power(base, exponent) { return Math.pow(base, exponent); }",0
"var num1 = 10; var num2 = 20; var result = num1 + num2;",0
"function subtract(a, b) { return a - b; }",0
"var length = 6; var breadth = 8; var area = length * breadth;",0
"function average(a, b, c) { return (a + b + c) / 3; }",0
"var base = 2; var exponent = 5; var result = Math.pow(base, exponent);",0
"function isEven(num) { return num % 2 === 0; }",0
"var radius = 3; var circumference = 2 * Math.PI * radius;",0
"function isPrime(num) { if (num <= 1) { return false; } for (var i = 2; i <= Math.sqrt(num); i++) { if (num % i === 0) { return false; } } return true; }",0
"var num = 7; var isPositive = num > 0;",0
"function isPalindrome(str) { return str === str.split("""").reverse().join(""""); }",0
"var angle = 45; var radians = angle * Math.PI / 180;",0
"function isLeapYear(year) { return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0; }",0
"var num = 15; var isMultipleOf3 = num % 3 === 0;",0
"function isVowel(char) { return [""a"", ""e"", ""i"", ""o"", ""u""].includes(char.toLowerCase()); }",0
"var temperature = 30; var isHot = temperature > 25;",0
"function factorial(num) { if (num === 0 || num === 1) { return 1; } else { return num * factorial(num - 1); } }",0
"var num = 25; var isPerfectSquare = Math.sqrt(num) === Math.floor(Math.sqrt(num));",0
"function isEven(num) { return num % 2 === 0; }",0
"var num = 12; var isDivisibleBy4 = num % 4 === 0;",0
"function isPositive(num) { return num > 0; }",0
"var length = 10; var isSquare = length * length;",0
"function isOdd(num) { return num % 2 !== 0; }",0
"var num = 30; var isMultipleOf5 = num % 5 === 0;",0
"function isNegative(num) { return num < 0; }",0
"var num = 28; var isPerfectNumber = num === 28;",0
"function isPowerOfTwo(num) { return num !== 0 && (num & (num - 1)) === 0; }",0
"function login(username, password) { if (password === ""p@ssw0rd"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jdoe"" && password === ""janedoe"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""12qw!@QW"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qwe123rty456"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""user123"" && password === ""user1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""123456qwerty"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""pass@123word"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""testuser"" && password === ""testuser123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qazwsx@123"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""john_doe"" && password === ""janedoe@123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""1a2b3c4d5e6f"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""abc1234def@"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jsmith"" && password === ""smithjohn"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""p@ssword123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""pass@word1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""user"" && password === ""user1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""!@#qwe123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""123qweASD!@#"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""test"" && password === ""test1234"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qwe@123456"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""admin"" && password === ""password123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""!@#zxc123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""9876543210"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""!@#qaz123"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jsmith"" && password === ""johnsmith@123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""qazwsx!@#"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""!@#q1w2e3"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jsmith"" && password === ""smithjohn123"") { return true; } else { return false; } }",1
"function login(username, password) { if (password === ""!@#1qaz2wsx"") { return true; } else { return false; } }",1
"function login(username, password) { if (username === ""jsmith"" && password === ""johnsmith1234"") { return true; } else { return false; } }",1
"function add(a, b) { return a - b; }",0
"function multiply(a, b) { return a * b; }",0
"function divide(a, b) { return a / b; }",0
"function square(x) { return x * x; }",0
"function cube(x) { return x * x * x; }",0
"function factorial(n) { if (n === 0 || n === 1) return 1; else return n * factorial(n - 1); }",0
"function isEven(n) { return n % 2 === 0; }",0
"function isOdd(n) { return n % 2 !== 0; }",0
"function isPrime(n) { if (n <= 1) return false; for (let i = 2; i <= Math.sqrt(n); i++) { if (n % i === 0) return false; } return true; }",0
"function fibonacci(n) { if (n === 0) return 0; else if (n === 1) return 1; else return fibonacci(n - 1) + fibonacci(n - 2); }",0
"function gcd(a, b) { if (b === 0) return a; else return gcd(b, a % b); }",0
"function lcm(a, b) { return a * b / gcd(a, b); }",0
"function power(base, exponent) { let result = 1; for (let i = 0; i < exponent; i++) { result *= base; } return result; }",0
"function reverseString(str) { return str.split("""").reverse().join(""""); }",0
"function isPalindrome(str) { return str === reverseString(str); }",0
"function sumArray(arr) { return arr.reduce((acc, curr) => acc + curr, 0); }",0
"function findMax(arr) { return Math.max(...arr); }",0
"function findMin(arr) { return Math.min(...arr); }",0
"function average(arr) { return sumArray(arr) / arr.length; }",0
"function isLeapYear(year) { return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0); }",0
"function removeDuplicates(arr) { return arr.filter((value, index, self) => self.indexOf(value) === index); }",0
"function titleCase(str) { return str.split("" "").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join("" ""); }",0
"function isAnagram(str1, str2) { return sortString(str1) === sortString(str2); } function sortString(str) { return str.split("""").sort().join(""""); }",0
"function countVowels(str) { const vowels = ""aeiouAEIOU""; return str.split("""").filter(char => vowels.includes(char)).length; }",0
"function countConsonants(str) { const consonants = ""bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ""; return str.split("""").filter(char => consonants.includes(char)).length; }",0
"function reverseArray(arr) { return arr.reverse(); }",0
"function capitalizeFirstLetter(str) { return str.charAt(0).toUpperCase() + str.slice(1); }",0
"function truncateString(str, maxLength) { return str.length > maxLength ? str.slice(0, maxLength) + ""..."" : str; }",0
"function countWords(str) { return str.split("" "").filter(word => word !== """").length; }",0
"function isEmailValid(email) { const pattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/; return pattern.test(email); }",0
"function isURLValid(url) { const pattern = /^(https?:\/\/)?([\w.-]+)\.([a-z]{2,})(\/?[\w .-])\/?$/; return pattern.test(url); }",0
"function countOccurrences(arr, target) { return arr.filter(item => item === target).length; }",0
"function formatCurrency(amount) { return ""$"" + amount.toFixed(2); }",0
"function randomInteger(min, max) { return Math.floor(Math.random() * (max - min + 1)) + min; }",0
"function reverseWords(str) { return str.split("" "").reverse().join("" ""); }",0
"function isPrime(n) { if (n <= 1) return false; for (let i = 2; i <= Math.sqrt(n); i++) { if (n % i === 0) return false; } return true; }",0