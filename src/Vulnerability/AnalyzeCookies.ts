export function analyzeCookies(node: any) {
    if (node.type === 'CallExpression' && node.callee.name === 'session') {
        const cookieProperty = node.arguments[0].properties.find((property: any) => property.key.name === 'cookie');
        if (cookieProperty) {
            const flags = cookieProperty.value.properties;
            const httpOnlyFlag = flags.find((flag: any) => flag.key.name === 'httpOnly');
            const secureFlag = flags.find((flag: any) => flag.key.name === 'secure');
            const sameSiteFlag = flags.find((flag: any) => flag.key.name === 'sameSite');

            if (httpOnlyFlag && httpOnlyFlag.value.value === true) {
                console.log('httpOnly flag is set correctly.'.green);
            } else {
                console.log('httpOnly flag is not set correctly.'.red);
            }

            if (secureFlag && secureFlag.value.value === true) {
                console.log('secure flag is set correctly.'.green);
            } else {
                console.log('secure flag is not set correctly.'.red);
            }

            if (sameSiteFlag && sameSiteFlag.value.value === true) {
                console.log('sameSite flag is set correctly.'.green);
            } else {
                console.log('sameSite flag is not set correctly.'.red);
            }
        }
    }

    // Recurse through child nodes
    if (node.body) {
        analyzeCookies(node.body);
    }
}
